// Code generated by sqlc. DO NOT EDIT.
// source: datafiles.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const dataFile = `-- name: DataFile :one
SELECT uuid, name, sha256 FROM datafiles
WHERE uuid = $1 LIMIT 1
`

func (q *Queries) DataFile(ctx context.Context, uuid uuid.UUID) (Datafile, error) {
	row := q.queryRow(ctx, q.dataFileStmt, dataFile, uuid)
	var i Datafile
	err := row.Scan(&i.UUID, &i.Name, &i.SHA256)
	return i, err
}

const insertDataFile = `-- name: InsertDataFile :exec
INSERT INTO datafiles (
    uuid,
    name,
    sha256
) VALUES (
    $1,
    $2,
    $3
) ON CONFLICT DO NOTHING
`

type InsertDataFileParams struct {
	UUID   uuid.UUID
	Name   string
	SHA256 []byte
}

func (q *Queries) InsertDataFile(ctx context.Context, arg InsertDataFileParams) error {
	_, err := q.exec(ctx, q.insertDataFileStmt, insertDataFile, arg.UUID, arg.Name, arg.SHA256)
	return err
}
